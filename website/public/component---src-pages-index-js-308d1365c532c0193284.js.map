{"version":3,"sources":["webpack:///./src/components/navigation.js","webpack:///./src/components/layout.js","webpack:///./src/components/post-link.js","webpack:///./src/components/homeHeader.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["props","className","to","children","data","site","siteMetadata","title","href","PostLink","post","class","frontmatter","path","thumbnail","src","alt","date","query","render","home","description","IndexPage","Posts","allMarkdownRemark","edges","filter","edge","node","map","key","id","style","marginTop","pageQuery","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","finalData","Fragment","StaticQuery","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"yPAGe,WAACA,GAAD,OACb,yBAAKC,UAAU,cACb,kBAAC,IAAD,CAAMC,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,SACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,a,UCFW,gBAAmB,IAAhBC,EAAe,EAAfA,SACVC,EAAI,OAWV,OACE,yBAAKH,UAAU,gBACb,4BAAQA,UAAU,eAChB,yBAAKA,UAAU,cACb,kBAAC,IAAD,CAAMC,GAAG,KAAKE,EAAKC,KAAKC,aAAaC,QAEvC,kBAAC,EAAD,OAEDJ,EACD,4BAAQF,UAAU,eAChB,gEAA+C,uBAAGO,KAAK,yBAAR,kB,0FCPxCC,EAjBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,6BAASC,MAAM,SACb,kBAAC,IAAD,CAAMT,GAAIQ,EAAKE,YAAYC,QACtBH,EAAKE,YAAYE,WAClB,yBAAKC,IAAKL,EAAKE,YAAYE,UAAWE,IAAKN,EAAKE,YAAYL,MAAQ,qBAGxE,gCACE,wBAAIN,UAAU,cACZ,kBAAC,IAAD,CAAMC,GAAIQ,EAAKE,YAAYC,KAAMZ,UAAU,aACxCS,EAAKE,YAAYL,QAGtB,yBAAKI,MAAM,aAAaD,EAAKE,YAAYK,S,YCdhC,oBACb,kBAAC,IAAD,CACEC,MAAK,aAYLC,OAAQ,SAAAf,GAAI,OACV,yBAAKH,UAAU,eACb,yBAAKA,UAAU,YAAYG,EAAKC,KAAKC,aAAac,KAAKb,OACvD,yBAAKN,UAAU,mBACb,2BAAIG,EAAKC,KAAKC,aAAac,KAAKC,cAElC,kBAAC,IAAD,CAAMnB,GAAG,SAASD,UAAU,mBAA5B,gBAnBN,UCHF,0CA2BeqB,UArBG,SAAC,GAIZ,IAECC,EAFF,EAHJnB,KACEoB,kBAAqBC,MAKpBC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKhB,YAAYK,QACvCY,KAAI,SAAAF,GAAI,OAAI,kBAAC,EAAD,CAAUG,IAAKH,EAAKC,KAAKG,GAAIrB,KAAMiB,EAAKC,UAEvD,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,wBAAII,MAAO,CAACC,UAAU,SAAtB,gBACA,yBAAKhC,UAAU,SACZsB,KAfT,IAsBaW,EAAS,a,kCC5BtB,wIAcyBC,QAAOC,QAdhC,IAgBMC,EAAqBC,IAAMC,cAAc,IAE/C,SAASC,EAAT,GAA4E,IAAzCC,EAAwC,EAAxCA,gBAAiBrC,EAAuB,EAAvBA,KAAMc,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OACzDuB,EAAYtC,EACdA,EAAKA,KACLqC,EAAgBvB,IAAUuB,EAAgBvB,GAAOd,KAErD,OACE,kBAAC,IAAMuC,SAAP,KACGD,GAAavB,EAAOuB,IACnBA,GAAa,uDAKrB,IAAME,EAAc,SAAA5C,GAAU,IACpBI,EAAkCJ,EAAlCI,KAAMc,EAA4BlB,EAA5BkB,MAAOC,EAAqBnB,EAArBmB,OAAQhB,EAAaH,EAAbG,SAE7B,OACE,kBAACkC,EAAmBQ,SAApB,MACG,SAAAJ,GAAe,OACd,kBAACD,EAAD,CACEpC,KAAMA,EACNc,MAAOA,EACPC,OAAQA,GAAUhB,EAClBsC,gBAAiBA,S,qBCzC3B,IAAsBK,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,wFCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGEf,IAAMgB,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV,O","file":"component---src-pages-index-js-308d1365c532c0193284.js","sourcesContent":["import React from \"react\"\nimport {Link} from \"gatsby\"\n\nexport default (props) => (\n  <nav className=\"navigation\"> \n    <Link to=\"/\">Home</Link>\n    <Link to=\"/about\">About</Link>\n    <Link to=\"/contact\">Contact</Link>\n  </nav>\n  \n)","import React from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\nimport Navigation from \"../components/navigation\"\nimport 'prismjs/themes/prism-okaidia.css';\n\nexport default ({ children }) => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `\n  )\n  return (\n    <div className=\"site-wrapper\">\n      <header className=\"site-header\">\n        <div className=\"site-title\">\n          <Link to=\"/\">{data.site.siteMetadata.title}</Link>\n        </div>\n        <Navigation />\n      </header>\n      {children}\n      <footer className=\"site-footer\">\n        <p>&copy; 2020 Delog &bull; Crafted with ❤️ by <a href=\"https://w3layouts.com\">W3Layouts</a></p>\n      </footer>\n    </div>\n  )\n}","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst PostLink = ({ post }) => (\n  <article class=\"card \">\n    <Link to={post.frontmatter.path}>\n      {!!post.frontmatter.thumbnail && (\n        <img src={post.frontmatter.thumbnail} alt={post.frontmatter.title + \"- Featured Shot\"} />\n      )}\n    </Link>\n    <header>\n      <h2 className=\"post-title\">\n        <Link to={post.frontmatter.path} className=\"post-link\">\n          {post.frontmatter.title}\n        </Link>\n      </h2>\n      <div class=\"post-meta\">{post.frontmatter.date}</div>\n    </header>\n  </article>\n)\nexport default PostLink","import React from \"react\"\nimport { StaticQuery, graphql, Link } from \"gatsby\"\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query HeadingQuery {\n        site {\n          siteMetadata {\n            home {\n              title\n              description\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div className=\"hero-header\">\n        <div className=\"headline\">{data.site.siteMetadata.home.title}</div>\n        <div className=\"primary-content\">\n          <p>{data.site.siteMetadata.home.description}</p>\n        </div>\n        <Link to='/about' className=\"button -primary\">About me &rarr;</Link>\n      </div>\n    )}\n  />\n)","import React from \"react\"\nimport { graphql } from 'gatsby'\nimport Layout from \"../components/layout\"\nimport PostLink from \"../components/post-link\"\nimport HeroHeader from \"../components/homeHeader\"\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  \n  const Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} />)\n\n  return (\n    <Layout>\n      <HeroHeader/>\n      <h2 style={{marginTop:32 + 'px'}}>Blog Posts &darr;</h2>\n      <div className=\"grids\">\n        {Posts}\n      </div>\n    </Layout>\n  )\n}\n\nexport default IndexPage\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n            thumbnail\n          }\n        }\n      }\n    }\n  }\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}